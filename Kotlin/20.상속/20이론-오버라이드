오버라이딩(Override)
- 부모클래스의 있는 멤버와 동일한 멤버를 만들수 없다
 . 오버라이딩을 통해 부모클래스의 함수를 재정의 할 수 있다.
 . 재정의 할때는 함수 맨 앞에 override 키워드를 사용해야 하고, 부모 클래스 함수 앞에는 open 키워드 사용해야함

open class Warrior(var name:String,var power:Int, var type:String){
    open fun attack(){
        println("복잡한 코드 + 공격")
    }
}

class DefenseWarrior constructor(name:String,power:Int):Warrior(name,power,"고블린"){
    fun defense(){
        println("방어")
    }
    override fun attack(){
        //재정의 함수
    }
}

오버로딩(Overloading)
- 동일한 함수를 두개 이상 만드는 것을 불가능
- 사용자가 어떤 함수를 호출했는지 알수가 없기때문
 fun sum(a:Int,b:Int):Int{return a+b}
 fun sum(a:Int,b:Int):Int{return a+b}
- 사용자가 어떤것을 호출했는지 알려준다면 복수개의 동일한 이름을 갖는 함수가 가능하다
 . 함수의 인자가 다른 경우 오버로딩 지원(예 : fun sum(a:Int):Int{return a+10}, 호출은 sum(10))
 . 리턴타입이 다른경우는 오버로딩이 안됨